openapi: "3.1.0"
info:
  title: "Bookings_microservices API"
  description: "Bookings_microservices API"
  version: "1.0.0"
servers:
  - url: "https://Bookings_microservices"
paths:
  /api/manager/hotels:
    get:
      summary: "GET api/manager/hotels"
      operationId: "listHotels"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/HotelForManagerDto"
  /api/manager/hotels/{id}:
    get:
      summary: "GET api/manager/hotels/{id}"
      operationId: "getHotelById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelForManagerDto"
    delete:
      summary: "DELETE api/manager/hotels/{id}"
      operationId: "deleteHotel"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
    put:
      summary: "PUT api/manager/hotels/{id}"
      operationId: "editHotel"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelForManagerDto"
  /api/manager/hotels/add:
    post:
      summary: "POST api/manager/hotels/add"
      operationId: "addHotel"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/HotelForManagerDto"
  /api/manager/hotels/{hotelId}/rooms:
    get:
      summary: "GET api/manager/hotels/{hotelId}/rooms"
      operationId: "listRooms"
      parameters:
        - name: "hotelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RoomForManagerDto"
  /api/manager/hotels/{hotelId}/rooms/{roomId}:
    get:
      summary: "GET api/manager/hotels/{hotelId}/rooms/{roomId}"
      operationId: "getRoomById"
      parameters:
        - name: "hotelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "roomId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RoomForManagerDto"
    delete:
      summary: "DELETE api/manager/hotels/{hotelId}/rooms/{roomId}"
      operationId: "deleteRoom"
      parameters:
        - name: "hotelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "roomId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/manager/hotels/{hotelId}/rooms/add:
    post:
      summary: "POST api/manager/hotels/{hotelId}/rooms/add"
      operationId: "addRoom"
      parameters:
        - name: "hotelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RoomForManagerDto"
  /api/manager/hotels/{hotelId}/rooms/{id}:
    put:
      summary: "PUT api/manager/hotels/{hotelId}/rooms/{id}"
      operationId: "editRoom"
      parameters:
        - name: "hotelId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RoomForManagerDto"
components:
  schemas:
    HotelForManagerDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        categoryType:
          type: "string"
          enum:
            - "HOTEL"
        line:
          type: "string"
        city:
          type: "string"
        country:
          type: "string"
    HotelDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        categoryType:
          type: "string"
          enum:
            - "HOTEL"
        line:
          type: "string"
        city:
          type: "string"
        country:
          type: "string"
    BigDecimal:
      type: "object"
      properties: { }
    RoomForManagerDto:
      type: "object"
      properties:
        roomId:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        currentPrice:
          $ref: "#/components/schemas/BigDecimal"
        roomType:
          type: "string"
          enum:
            - "SINGLE"
            - "DOUBLE"
    RoomDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        currentPrice:
          $ref: "#/components/schemas/BigDecimal"
        roomType:
          type: "string"
          enum:
            - "SINGLE"
            - "DOUBLE"